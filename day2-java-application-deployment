###first you need to be an root user
  sudo -i
  ##lets install maven and openjdk
   175  apt install default-jdk
  176  apt install maven
  ##lets clone the maven app
  177  git clone https://github.com/gopal1409/spring-hello.git
####
    178  cd spring-hello/
  179  mvn clean package
#####compile the application which will give me an jar file
   187  cd target/
  188  ls
  189  java -jar spring-boot-2-hello-world-1.0.2-SNAPSHOT.jar
###you can access the app from the browser by pasting your dns name : 8080 /hello replace the dns name to your server
  http://lab-as-19141.lc.cl-labs.springpeople.com:8080/hello
cd /root/spring-hello/
###we need to create a file called as dockerfile
nano dockerfile
###inside the dockerfile provide this instruction
FROM openjdk
#when i run this will download the openjdk image
WORKDIR /app
#this will create the directory inside your image if the directory exist it is going to skip creation of the directory
COPY /target/*.jar /app/web.jar
#finally we are going to run the application
ENTRYPOINT ["java","-jar","/app/web.jar"]
###to save the file you can press ctrl x press y and enter 
##lets build the image -t is all about when you build the image it will give you a name of the image 
#docker build always look for a file called as docker file
 202  docker build -t app .
##lets verify the image is created or not 
[root@ip-172-31-115-189 spring-hello]$ docker images
REPOSITORY   TAG       IMAGE ID       CREATED         SIZE

app          latest    d092ac62c02b   5 minutes ago   488MB

 210  docker container run -d -p 81:8080 app
##once you create the image we spin up a container out of it 
curl localhost:81/hello
###or you can copy the dns name and paste in browser : 81/hello

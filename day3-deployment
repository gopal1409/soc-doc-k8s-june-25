#this will create your first deployment and give you two pod 
83  kubectl create deployment my-first-deployment --image=nginx --port=80 --replicas=2 --dry-run=client -o yaml
   84  kubectl create deployment my-first-deployment --image=nginx --port=80 --replicas=2 --dry-run=client -o yaml > dep.yml
   85  kubectl apply -f dep.yml
   86  kubectl get deployment
  ##this will show you two pod attach to your deployment 
   87  kubectl get pod
  ##change the pod name your pod name will not be same like mine
   88  kubectl delete pod my-first-deployment-77bdf869fc-92gmv
  ##once you delete the pod as replicas is always 2 means it will create a new pod 
   89  kubectl get pod
##deployment explanation
#we apply the file kubectl apply -f dep.yml
apiVersion: apps/v1 ###deployment api version is apps/v1
kind: Deployment #we are creating a deployment
metadata:
  creationTimestamp: null
  labels:
    app: my-first-deployment
  name: my-first-deployment
spec: #specification of the deployment
#replicas , selector ,template
  replicas: 2 
  selector: #.spec.selector 
  #.spec.selector.matchLabels kind of match expression 
    matchLabels:
      app: my-first-deployment
      #the label is in key value format
  strategy: {}
  template: #isnide the pod we need to create containers 
  #how this template will be mapped to the pod 
    metadata:
      creationTimestamp: null
      labels: #same label we are using 
        app: my-first-deployment
    spec: #this template has an specificattion which contianer the container def 
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80
        resources: {}
status: {}
#relationship between dep+rs=pod
[root@ip-172-31-115-211 ~]$ kubectl get deploy
NAME                  READY   UP-TO-DATE   AVAILABLE   AGE
my-first-deployment   2/2     2            2           38m
[root@ip-172-31-115-211 ~]$ kubectl get rs
NAME                             DESIRED   CURRENT   READY   AGE
my-first-deployment-77bdf869fc   2         2         2       38m
[root@ip-172-31-115-211 ~]$ kubectl get pod
NAME                                   READY   STATUS    RESTARTS   AGE
my-first-deployment-77bdf869fc-f9djv   1/1     Running   0          38m
my-first-deployment-77bdf869fc-rwscn   1/1     Running   0          37m
my-first-pod                           1/1     Running   0          148m
[root@ip-172-31-115-211 ~]$
#how to update the deployment process
#check the name of the image the below command will update your image
107  kubectl set image deploy my-first-deployment nginx=nginx:1.16.1
####
  108  kubectl get deploy
#now if you check replicaset you will find two different replicaset one is previos version and new version
  109  kubectl get rs
#you can check the rollout status
  110  kubectl rollout status deploy my-first-deployment
  111  kubectl get pod
  112  kubectl describe deployment
#lets make a mistake with an image so that my deployment hang and i can rollback to previous releaxse
  113  kubectl set image deploy my-first-deployment nginx=nginx:1.161
#this will show that the deployment is in hang state press ctrl c
  114  kubectl rollout status deploy my-first-deployment
#now is you look into rs it will show that there are two replicaset in running state but the wrond deploymetn will show not availabel 
  115  kubectl get rs
  116  kubectl get pod
 ##you can check all the rollout
  120  kubectl rollout history deployment my-first-deployment
  121  kubectl rollout history deployment my-first-deployment --revision=1
  122  kubectl rollout history deployment my-first-deployment --revision=2
  123  kubectl rollout history deployment my-first-deployment --revision=3
##lets undo the deployment 
  124  kubectl rollout undo deployment my-first-deployment
####now check that the deployment is up and running 
kubectl get deploy

#roll back to specific release
[root@ip-172-31-115-211 ~]$ kubectl rollout undo deployment my-first-deployment --to-revision=1
deployment.apps/my-first-deployment rolled back
#lets do the manual scaling 
  134  kubectl get deploy
  135  kubectl scale deploy my-first-deployment --replicas=5
  136  kubectl get deploy
  137  kubectl get pod
#the below command will show the replicas to save the file Press Esc :q!
  138  kubectl edit deploy my-first-deployment
